name: Build and Release Electron App
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Install dependencies
        run: npm install
      - name: Create Installer
        run: npm run electron:build
        if: matrix.os == 'windows-latest'
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}-build
          path: dist/*
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Installer
        uses: actions/upload-release-asset@v3
        if: matrix.os == 'windows-latest'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/*.exe
          asset_name: webmind-installer-${{ matrix.os }}.exe
          asset_content_type: application/octet-stream
